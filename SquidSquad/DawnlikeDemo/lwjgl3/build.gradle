apply plugin: 'application'
java.targetCompatibility = JavaVersion.VERSION_1_8

sourceSets.main.resources.srcDirs += [ rootProject.file('assets').path ]
mainClassName = 'com.github.tommyettinger.lwjgl3.Lwjgl3Launcher'
eclipse.project.name = appName + '-lwjgl3'
sourceCompatibility = JavaVersion.VERSION_1_8

dependencies {
	implementation project(':core')
	implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
	implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
}

def os = System.properties['os.name'].toLowerCase()

run {
	workingDir = rootProject.file('assets').path
	setIgnoreExitValue(true)
	
	if (os.contains('mac')) {
		// Required to run LWJGL3 Java apps on MacOS
		jvmArgs += "-XstartOnFirstThread"
	}
}

jar {
	archiveFileName = "${appName}-Large.jar"
	duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
	destinationDirectory = file("$project.buildDir/lib")
	dependsOn configurations.runtimeClasspath
	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
	exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')
	dependencies {
		exclude('META-INF/INDEX.LIST', 'META-INF/maven/**')
	}
	manifest {
		attributes 'Main-Class': project.mainClassName
	}
	doLast {
		file(archiveFile).setExecutable(true, false)
	}
}

task proguard(type: proguard.gradle.ProGuardTask) {
	outputs.upToDateWhen { false }
	configuration 'proguard-rules.pro'
	//printmapping 'build/lib/out.map'
	if (System.getProperty('java.version').startsWith('1.')) {
		libraryjars "${System.getProperty('java.home')}/lib/rt.jar"
	} else {
//		libraryjars "C:/d/jvm/jdk16-hotspot/jmods/java.base.jmod", jarfilter: '!**.jar', filter: '!module-info.class'
		libraryjars "${System.getProperty('java.home')}/jmods/java.base.jmod", jarfilter: '!**.jar', filter: '!module-info.class'
	}
	injars "build/lib/${appName}-Large.jar"
	outjars "build/lib/${appName}.jar"
}

proguard.dependsOn jar
